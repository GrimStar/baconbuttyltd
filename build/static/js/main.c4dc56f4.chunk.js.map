{"version":3,"sources":["baconeggbap.jpg","bacon-co-logo-black.png","img_store-front.jpg","components/create-user.component.js","components/Logo.component.js","components/home-title.component.js","components/home-slogan.component.js","components/full-screen-cover-image.component.js","components/navbar.component.js","components/large-image.component.js","components/slide-show.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateUser","props","onChangeUsername","bind","onSubmit","state","username","e","this","setState","target","value","preventDefault","user","console","log","axios","post","then","res","data","className","type","required","onChange","Component","LogoImage","src","image","alt","HomeTitle","title","HomeSlogan","FullCoverImage","NavBar","LargeImage","SlideShow","zoomOutImages","slideImages","BaconEggBapImg","fadeImages","properties","duration","transitionDuration","infinite","indicators","oldIndex","newIndex","map","each","index","key","style","backgroundImage","App","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4dc56f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baconeggbap.fbafadf4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bacon-co-logo-black.de5df743.png\";","module.exports = __webpack_public_path__ + \"static/media/img_store-front.2cf06692.jpg\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username\r\n    }\r\n\r\n    console.log(user);\r\n\r\n    axios.post('http://localhost:5000/users/add', user)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      username: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n         \r\n        <h3>Create New User</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"text-center\">\r\n                <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport default class LogoImage extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center p-0 m-0\">\r\n                <img className=\"\" src={this.props.image} alt=\"Sorry I didn't load =(\" />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport default class HomeTitle extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center text-light font-style font-weight-bold pt-5 pb-3 px-5\">\r\n                <h1>{this.props.title}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nexport default class HomeSlogan extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center text-light font-style font-weight-bold pt-2 pb-2\">\r\n                <h2>{this.props.title}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CoverImage from \"../baconeggbap.jpg\";\r\nimport Logo from \"./Logo.component\";\r\nimport LogoImage from \"../bacon-co-logo-black.png\";\r\nimport HomeTitle from \"./home-title.component\";\r\nimport HomeSlogan from \"./home-slogan.component\";\r\nexport default class FullCoverImage extends Component {\r\n    \r\n\r\n    render() {\r\n        const titleText = \"Bacon Butty Shop\";\r\n        const sloganText = \"'Where the bacon meets the butty'\";\r\n        return (\r\n            <div className=\"bg-image\">\r\n                <HomeTitle title={titleText}/>\r\n                <Logo image={LogoImage} />\r\n                <HomeSlogan title={sloganText}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CoverImage from \"../baconeggbap.jpg\";\r\n\r\nexport default class NavBar extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-transparent text-dark sticky-top position-absolute\">\r\n                    <div className=\"\">\r\n                        <button className=\"navbar-toggler\" type=\"button\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class LargeImage extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bg-image-width-sf-boxed\">\r\n                {/*<img className=\"vw-90\" src={this.props.image} alt=\"woops I didn't load =(\"/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Slide, Fade, Zoom } from 'react-slideshow-image';\r\nimport BaconEggBapImg from '../baconeggbap.jpg';\r\nimport \"../slideshow.css\";\r\n\r\n\r\nclass SlideShow extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            zoomOutImages: [\r\n                '../baconeggbap.jpg',\r\n                '../baconeggbap.jpg',\r\n                '../baconeggbap.jpg'\r\n            ],\r\n            slideImages: [\r\n                BaconEggBapImg,\r\n                BaconEggBapImg,\r\n                BaconEggBapImg\r\n            ],\r\n            fadeImages: [\r\n                '../baconeggbap.jpg',\r\n                '../baconeggbap.jpg',\r\n                '../baconeggbap.jpg'\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const properties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            infinite: true,\r\n            indicators: true,\r\n            onChange: (oldIndex, newIndex) => {\r\n                console.log(\r\n                    `Slide transition finished from ${oldIndex} to ${newIndex}`\r\n                );\r\n            }\r\n        };\r\n\r\n        const fadeProperties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            indicators: true,\r\n            infinite: false,\r\n            onChange: (oldIndex, newIndex) => {\r\n                console.log(`Fade transition finished from ${oldIndex} to ${newIndex}`);\r\n            }\r\n        };\r\n\r\n        const zoomOutProperties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            indicators: true,\r\n            scale: 0.4,\r\n            onChange: (oldIndex, newIndex) => {\r\n                console.log(`zoom transition finished from ${oldIndex} to ${newIndex}`);\r\n            }\r\n        };\r\n\r\n        const zoomInProperties = {\r\n            duration: 5000,\r\n            transitionDuration: 500,\r\n            indicators: true,\r\n            scale: 1.4\r\n        };\r\n        const { slideImages, zoomOutImages, fadeImages } = this.state;\r\n       \r\n        return (\r\n            //<div>\r\n                \r\n                //<h3></h3>\r\n                <div className=\"slide-container-boxed\">\r\n                    <Slide {...properties} className=\"slide-box\">\r\n                        {slideImages.map((each, index) => (\r\n                        <div key={index} className=\"each-slide-boxed\">\r\n                            <div style={{ backgroundImage: `url(${each})` }}>\r\n                                <span>Slide {index + 1}</span>\r\n                            </div>\r\n                        </div>\r\n                        ))}\r\n                    \r\n                    </Slide>\r\n                </div>\r\n            //</div>\r\n\r\n\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//import \"./startbootstrap-business-casual-gh-pages/css/business-casual.min.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n//import Navbar from \"./components/navbar.component\";\r\n//import ExercisesList from \"./components/exercises-list.component\";\r\n//import EditExercise from \"./components/edit-exercise.component\";\r\n//import CreateExercise from \"./components/create-exercise.component\";\r\nimport CreateUser from \"./components/create-user.component\";\r\nimport CoverImage from \"./components/full-screen-cover-image.component\";\r\nimport Logo from \"./components/Logo.component\";\r\nimport NavBar from \"./components/navbar.component\";\r\nimport BapImage from \"./baconeggbap.jpg\";\r\nimport StoreFrontImg from \"./img_store-front.jpg\";\r\nimport LargeImage from \"./components/large-image.component\";\r\n\r\nimport SlideShow from \"./components/slide-show.component\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        <Router>\r\n            <div className=\"container-fluid bg-dark p-0 border border-dark\">\r\n                {/*<Navbar />*/}\r\n\r\n                {/*<Route path=\"/\" exact component={CoverImage} />*/}\r\n                <Route exact path=\"/\" render={props => (\r\n                    <React.Fragment>\r\n                        <NavBar />\r\n                        <div>                           \r\n                            <CoverImage />                       \r\n                        </div>\r\n                        <div className=\"sh-box\">\r\n                            <SlideShow className=\"h-100\" />\r\n                            <LargeImage />                        \r\n                        </div>\r\n                    </React.Fragment>\r\n                )} />\r\n                {/*<Route path=\"/edit/:id\" component={EditExercise} />*/}\r\n                {/*<Route path=\"/create\" component={CreateExercise} />*/}\r\n                <Route path=\"/user\" component={CreateUser} />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}